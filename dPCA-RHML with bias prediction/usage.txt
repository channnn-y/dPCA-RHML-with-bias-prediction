# dPCA-RHML with bias prediction 


The user-friendly codes for aiding identification of the allosteric site and biased allosteric modulators.


# Requirements:
```
Tensorflow 1.14.0
sklearn
functools
Scikit-learn
numpy
keras
lime
mdtraj
xlrd
csv
XlsxWriter
```


# Detailed guidelines
The code offers customizable input options, automatically generating readable output files that include cluster categories and important residues deciding the classification. 

To use the code, you need to set certain arguments, as described below:

```
parser.add_argument('--traj_file', help='The trajectory file')
parser.add_argument('--top_file', help='The topology file')
parser.add_argument('--n_clusters', help='The number of cluster')
parser.add_argument('--batch_size', help='CNN train batch size')
parser.add_argument('--epochs', help='CNN train epochs')
parser.add_argument('--print_detail', help='Print details ( True or False)')
parser.add_argument('--print_acc', help='Print accuracy (True or False)')
parser.add_argument('--save_models', help='Save models (True or False).')
parser.add_argument('--atom_file', help='Specify the filename for saving the importance scores of atoms')
parser.add_argument('--res_file', help='Specify the filename for saving the importance scores of residues')
```

Usage:

#Step 1
## Run clustering with your feature file. Please provide the the topology file, the trajectory file.
##you can change the PCs as you need
```
python get_dPCA_labels.py

```
#This will output your_label.npy file for the next step

#Step 2
## Train the classification model by dPCA-clustering label. Please provide the the topology file, the trajectory file, and the label file.

```
python main_all.py --labels_file='your_label.npy' --traj_file='your_traj.nc' --top_file='your_top.pdb' --n_clusters=cluster_number --batch_size=N --epochs=M --print_detail='True' --print_acc='True' --save_models='True' --atom_file='atom' --res_file='res'
```
##this will output the accuracy and important residues.

#Step 3
#use wordom to calculate the allosteric regulation pathways and select the top 100 shortest pathways to calculate the allosteric regulation network

```
#cd allo_network_bias_pre
python frequency_count.py

```
#change the file path in *py
